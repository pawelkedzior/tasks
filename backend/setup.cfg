[metadata]
name = tasks
description = Sample project for managing tasks
author = Paweł Kędzior
author_email = pawel.kedzior@o2.pl
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/pawelkedzior/tasks

platforms = any

classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

python_requires = >=3.9

install_requires =
    importlib-metadata; python_version<"3.8"

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
testing =
    setuptools
    pytest
    pytest-cov

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = tasks.module:function
# For example:
console_scripts =
    fibonacci = tasks.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov tasks --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[devpi:upload]
no_vcs = 1
formats = bdist_wheel

[pyscaffold]
version = 4.6
package = tasks
extensions =
    github_actions
    markdown
    pre_commit
